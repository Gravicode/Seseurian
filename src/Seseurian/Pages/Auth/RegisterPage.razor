@page "/register"
@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject IToastService toastService
@using Seseurian.Tools
@layout NoAuthLayout

<div>
    <div class="lg:p-12 max-w-md max-w-xl lg:my-0 my-12 mx-auto p-6 space-y-">
        <h1 class="lg:text-3xl text-xl font-semibold mb-6"> Sign up</h1>
        <p class="mb-2 text-black text-lg"> Register to manage your account </p>
        <div action="">
            <div class="flex lg:flex-row flex-col lg:space-x-2">
                <input type="text" @bind="DataUser.FirstName" placeholder="First Name" class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
                <input type="text" @bind="DataUser.LastName" placeholder="Last Name" class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
            </div>
            <input type="email" placeholder="Email" @bind="DataUser.Email" class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
            <input type="text" placeholder="Phone"  @bind="DataUser.Phone"  class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
            <input type="text" placeholder="Address" @bind="DataUser.Alamat"  class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
            <input type="password" placeholder="Password" @bind="DataUser.Password" class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
            <input type="password" placeholder="Confirm Password" @bind="RetypePass" class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
            <div class="flex justify-start my-4 space-x-1">
                <img src="@CaptchaImage" style="text-align:center;margin-bottom:5px;mr-1;mb-1">
                <button @onclick="GenerateCaptcha" class="btn btn-success mb-1">Change</button>
            </div>
            <input type="text" @bind="TypedCaptcha" placeholder="Type Captcha" class="bg-gray-200 mb-2 shadow-none  dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">

            <div class="flex justify-start my-4 space-x-1">
                <div class="checkbox">
                    <input type="checkbox" id="chekcbox1" checked>
                    <label for="chekcbox1"><span class="checkbox-icon"></span> I Agree</label>
                </div>
                <a href="#"> Terms and Conditions</a>
            </div>
            <button type="button" @onclick="DaftarUser" class="bg-gradient-to-br from-pink-500 py-3 rounded-md text-white text-xl to-red-400 w-full">Register</button>
            <div class="text-center mt-5 space-x-2">
                <p class="text-base"> Do you have an account? <a href="/sign-in"> Login </a></p>
            </div>
        </div>
    </div>
</div>


<!-- Spacer -->
<div class="margin-top-70"></div>
<!-- Spacer / End-->
@code {
    public string CaptchaImage { get; set; }
    public string Answer { get; set; }
    public string TypedCaptcha { get; set; }

    UserProfile DataUser = new UserProfile();
    string RetypePass;
    string KodePengurus;
    string ErrorMsg = string.Empty;
    bool RegisterSuccess = false;

    void NotAvailable()
    {
        toastService.ShowWarning("Feature is not available yet");
    }

   

    void GenerateCaptcha()
    {
        Random oRandom = new Random();
        int iNumber = oRandom.Next(1000, 9999);
        Answer = iNumber.ToString();
        var temp = CaptchaGenerator.GetCaptcha(Answer, 158, 70);
        string base64String = Convert.ToBase64String(temp, 0, temp.Length);
        CaptchaImage = "data:image/png;base64," + base64String;
    }
   
    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CaptchaImage))
            GenerateCaptcha();
    }
    async Task DaftarUser()
    {
        bool isPengurus = false;
        ErrorMsg = "";
        UserProfileService svc = new UserProfileService();
        if (string.IsNullOrEmpty(TypedCaptcha))
        {
            ErrorMsg += "Tolong isi Captcha. ";
        }
        if (Answer != TypedCaptcha)
        {
            ErrorMsg += "Captcha tidak valid. ";
        }
        if (string.IsNullOrEmpty(DataUser.Email))
        {
            ErrorMsg += "Tolong di isi email. ";

        }
        if (!Seseurian.Tools.FormValidation.IsValidEmail(DataUser.Email))
        {
            ErrorMsg += "Format email tidak valid. ";

        }
        if (string.IsNullOrEmpty(DataUser.Password))
        {
            ErrorMsg += "Tolong di isi password. ";

        }
        if (string.IsNullOrEmpty(DataUser.Phone))
        {
            ErrorMsg += "Tolong di isi no hp. ";

        }
        if (string.IsNullOrEmpty(DataUser.FirstName))
        {
            ErrorMsg += "Tolong di isi nama depan. ";

        }
        if (string.IsNullOrEmpty(DataUser.LastName))
        {
            ErrorMsg += "Tolong di isi nama belakang. ";

        }
        if (string.IsNullOrEmpty(DataUser.Alamat))
        {
            ErrorMsg += "Tolong di isi alamat. ";

        }
        if (DataUser.Password != RetypePass)
        {
            ErrorMsg += "Password tidak sesuai dengan ulang password. ";

        }

        DataUser.Username = DataUser.Email;

        if (svc.IsUserExists(DataUser.Username))
        {
            ErrorMsg += "User sudah terdaftar sebelumnya, gunakan email lain. ";

        }


        if (ErrorMsg.Length > 0)
        {
            toastService.ShowWarning(ErrorMsg, "Perhatian");
            return;
        }
        var enc = new Encryption();
        DataUser.FullName = $"{DataUser.FirstName} {DataUser.LastName}";


        DataUser.Role = isPengurus ? Roles.Pengurus : Roles.User;
        DataUser.Password = enc.Encrypt(DataUser.Password);
        DataUser.CreatedDate = DateHelper.GetLocalTimeNow();
        if (svc.InsertData(DataUser))
        {
            var msg = "Anda telah terdaftar di Seseurian, nuhun";
            await SmsService.SendSms(msg, DataUser.Phone);
            await MailService.PostmarkSendEmail("Telah Teregister di Seseurian", msg, DataUser.Email);
            RegisterSuccess = true;
            toastService.ShowSuccess("User berhasil di daftarkan.", "Info");
            NavMgr.NavigateTo("/login");

        }
    }
}
