@inherits LayoutComponentBase
@using Blazored.Toast.Configuration

@page "/auth/{Slug}"


<div id="wrapper" class="flex flex-col justify-between h-screen">

    <!-- header-->
    <div class="bg-white py-4 shadow dark:bg-gray-800">
        <div class="max-w-6xl mx-auto">


            <div class="flex items-center lg:justify-between justify-around">

                <a href="/trending">
                    <img src="assets/images/logo.png" alt="" class="w-32">
                </a>

                <div class="capitalize flex font-semibold hidden lg:block my-2 space-x-3 text-center text-sm">
                    <a href="/sign-in" class="py-3 px-4">Login</a>
                    <a href="/register" class="bg-pink-500 pink-500 px-6 py-3 rounded-md shadow text-white">Register</a>
                </div>

            </div>
        </div>
    </div>

    <CascadingValue Value="Slug">
        @Body
    </CascadingValue>

    <!-- Footer -->

    <div class="lg:mb-5 py-3 uk-link-reset">
        <div class="flex flex-col items-center justify-between lg:flex-row max-w-6xl mx-auto lg:space-y-0 space-y-3">
            <div class="flex space-x-2 text-gray-700 uppercase">
                <a href="/about"> About</a>
                <a href="/help"> Help</a>
                <a href="/terms"> Terms</a>
                <a href="/privacy"> Privacy</a>
            </div>
            <p class="capitalize"> © copyright @Tahun by Gravicode</p>
        </div>
    </div>

</div>




<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="10"
                SuccessClass="success-toast-override"
                SuccessIconClass="fa fa-thumbs-up"
                ErrorIconClass="fa fa-bug" />

@code {
    int Tahun = DateHelper.GetLocalTimeNow().Year;
    [Parameter]
    public string Slug { get; set; } = "login";

    protected override void OnParametersSet()
    {
        /*
        // pull out the "Slug" parameter from the route data
        object slug = null;
        if ((this.Body.Target as RouteView)?.RouteData.RouteValues?.TryGetValue("Slug", out slug) == true)
        {
            //Slug = slug?.ToString();
        }
        */
    }
}